geom_boxplot() +
ggtitle("Creation Year List vs Original Loan Amount") +
xlab("Creation Year List") +
ylab("Original Loan Amount")
by(loan_df$LoanOriginalAmount, loan_df$CreationYearList, summary)
ggplot(aes(x = as.character(Term), y = LoanOriginalAmount),
data = loan_df) +
geom_boxplot() +
ggtitle("Term vs Original Loan Amount") +
xlab("Term") +
ylab("Original Loan Amount")
by(loan_df$LoanOriginalAmount, loan_df$Term, summary)
ggplot(aes(x = IncomeRange, y = LoanOriginalAmount), data=loan_df) +
geom_boxplot() +
ggtitle("Income Range  vs Loan Amount") +
xlab("Income Range") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1)) +
ylab("Original Loan Amount")
ggplot(aes(x = StateOfEmployment, y = LoanOriginalAmount), data=loan_df) +
geom_boxplot() +
ggtitle("Employment Status  vs Original Loan Amount") +
xlab("Employment Information") +
ylab("Original Loan Amount") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1))
summary(loan_df$CurrentCreditLines)
summary(loan_df$MonthlyDebt)
ggplot(aes(x = CurrentCreditLines, y = MonthlyDebt),
data = subset(loan_df, MonthlyDebt != 171000)) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#B1C192')) +
geom_smooth(method = 'lm', color = 'black') +
xlim(0,60) +
ylim(0,10000) +
ggtitle("Monthly Debt vs Current Credit Lines") +
xlab("Monthly Debt") +
ylab("Current Credit Lines")
cor.test(loan_df$CurrentCreditLines, loan_df$MonthlyDebt, method = "pearson")
ggplot(aes(x=BorrowerRate, y = LoanOriginalAmount), data = loansAfter_01_07_09) +
geom_point(alpha = 1/20) +
ggtitle("Borrower Rate vs Loan Amount (by Prosper Ratings)") +
ylab("Loan Amount") +
xlab("Borrower Rate") +
facet_wrap(~ProsperRating..numeric., ncol=3,  scales = "free") +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=factor(ProsperRating..numeric.))) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=factor(ProsperRating..numeric.))) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=factor(ProsperRating..numeric.))) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_jitter(aes(color=ProsperRating..numeric.)) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(GGally)
library(lubridate)
# Loading the data
loan_df <- read.csv('prosperLoanData.csv', sep = ',', stringsAsFactors=FALSE)
dim(loan_df)
names(loan_df)
str(loan_df)
range(loan_df$ListingCreationDate)
date_01_07_09 <- "2009-07-01"
table(date_01_07_09 > loan_df$ListingCreationDate,
dnn = "Number of loans before July 1st, 2009")
table(date_01_07_09 > loan_df$ListingCreationDate,
dnn = "Percentage of loans before July 1st, 2009") /
length(loan_df$ListingCreationDate) * 100
loan_df$CreationYearList <- year(loan_df$ListingCreationDate)
loan_df$CreationYearList <- as.factor(loan_df$CreationYearList)
loan_df$MonthlyDebt <- loan_df$DebtToIncomeRatio * loan_df$StatedMonthlyIncome
categoryListIndex <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
11, 12, 13, 14, 15, 16, 17, 18, 19, 20)
categoryListValues <- c("Not Available", "Debt Consolidation",
"Home Improvement", "Business", "Personal Loan",
"Student Use", "Auto", "Other", "Baby&Adoption",
"Boat", "Cosmetic Procedure",  "Engagement Ring",
"Green Loans", "Household Expenses",
"Large Purchases", "Medical/Dental", "Motorcycle",
"RV", "Taxes", "Vacation", "Wedding Loans")
loan_df$CategoryNameList <-
categoryListValues[match(loan_df$ListingCategory..numeric.,
categoryListIndex)]
incomeRanges <- c('Not displayed', 'Not employed',
'$0','$1-24,999', '$25,000-49,999',
'$50,000-74,999', '$75,000-99,999',
'$100,000+')
loan_df$IncomeRange <- factor(loan_df$IncomeRange, levels = incomeRanges)
loansAfter_01_07_09 <- subset(loan_df,
loan_df$ListingCreationDate > date_01_07_09)
loansBefore_01_07_09 <- subset(loan_df,
loan_df$ListingCreationDate < date_01_07_09)
ggplot(aes(x = CreationYearList), data = loan_df) +
stat_count() +
ggtitle("Loan count by Year") +
xlab("Year")
quaterDist = unique(loan_df$LoanOriginationQuarter)
quaterDist = quaterDist[order(substring(quaterDist,4,7), substring(quaterDist,1,2))]
ggplot(aes(x = LoanOriginationQuarter), data = loan_df) +
stat_count() +
scale_x_discrete(limits= quaterDist) +
ggtitle("Loan Distribution by Quarter") +
xlab("Yearly Quarters") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=90, vjust=1))
summary(loan_df$LoanOriginalAmount)
ggplot(aes(x = LoanOriginalAmount), data = loan_df) +
#geom_histogram(binwidth=300, color='red') +
#geom_histogram(binwidth=400, color='red') +
#geom_histogram(binwidth=500, color='red') +
geom_histogram(binwidth=1000, color='red') +
#geom_histogram(binwidth=5000, color='red') +
ggtitle("Loan Amount") +
xlab("Loan Amount")
ggplot(aes(x = Term), data = loan_df) +
stat_count() +
ggtitle("Loans by Term") +
xlab("Term") +
scale_x_discrete(limits= c(unique(loan_df$Term)))
table(loan_df$Term)
summary(loan_df$Term)
ggplot(aes(x = CategoryNameList), data = loan_df) +
stat_count(color='black') +
ggtitle("Reasons for Loans") +
xlab("Reason") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=90, vjust=1))
loansWithoutListingCategory <-
subset(loan_df,
ListingCategory..numeric. == '0')[c('ListingCreationDate',
'CreationYearList',
'ListingCategory..numeric.')]
table(loansWithoutListingCategory$CreationYearList)
ggplot(aes(x = MonthlyLoanPayment), data = loan_df) +
geom_histogram(fill = "#B1C192", color='black', binwidth = 20) +
ggtitle("Monthly Loan Payment") +
xlab("Monthly Loan Payment")
summary(loan_df$MonthlyLoanPayment)
# Using square root of Monthly Loan Payment
ggplot(aes(x = sqrt(MonthlyLoanPayment)), data = loan_df) +
geom_histogram(fill = "#B1C192", color='black', binwidth = 2) +
ggtitle("Monthly Loan Payment") +
xlab("Monthy Loan Payment (square-rooted)")
ggplot(aes(x = IncomeRange), data = loan_df) +
stat_count(fill = "#B1C192") +
geom_text(stat="count", aes(label = ..count..)) +
ggtitle("Annual income of borrowers")  +
xlab("Income Range") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=90, vjust=1))
ggplot(aes(x = MonthlyDebt), data = subset(loan_df, MonthlyDebt < 6000)) +
geom_histogram(fill = "#B1C192", color='black', binwidth = 70) +
ggtitle("Monthly Debt") +
xlab("Monthly Debt") +
scale_x_continuous(breaks=seq(0, 6000, 500))
summary(loan_df$MonthlyDebt)
summary(subset(loan_df, MonthlyDebt < 6000)$MonthlyDebt)
ggplot(aes(x = EmploymentStatus), data = loan_df) +
stat_count(fill = "#B1C192") +
geom_text(stat="count", aes(label = ..count..)) +
ggtitle("Employment Status of the borrowers")  +
xlab("Employment Status") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, vjust=1))
loan_df$StateOfEmployment <- ifelse(
loan_df$EmploymentStatus == 'Self-employed' |
loan_df$EmploymentStatus == 'Employed' |
loan_df$EmploymentStatus == 'Full-time' |
loan_df$EmploymentStatus == 'Part-time',
c("employed"),
c("unemployed"))
table(loan_df$StateOfEmployment)
ggplot(aes(x = EmploymentStatusDuration/12), data = loan_df) +
geom_histogram(binwidth=1, fill = "#B1C192", color='black') +
ggtitle("Employment Duration of the borrowers") +
xlab("Employment duration (years)") +
theme(text = element_text(size=10))
occupationGroup_df <- group_by(loan_df, Occupation)
borrowers <- summarise(occupationGroup_df, count = n())
borrowers <-
borrowers[order(-borrowers$count),]
#head(borrowers)
#head(borrowers, 10)
borrowers <- subset(borrowers,
Occupation != "Other" & Occupation != "")
head(borrowers, 10)
occupations <- unique((head(borrowers, 10))$Occupation)
Occupations_Top10 <- subset(loan_df,
(Occupation %in% occupations))
loansWithoutOccupation <-
subset(loan_df,
Occupation == '')[c('Occupation',
'EmploymentStatus',
'CreationYearList')]
table(loansWithoutOccupation$CreationYearList)
table(loansWithoutOccupation$EmploymentStatus)
ggplot(aes(x = Occupation), data = Occupations_Top10) +
stat_count(fill = "#B1C192") +
geom_text(stat="count", aes(label = ..count..)) +
ggtitle("Top 10 Occupations of Borrowers") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=90, vjust=1))
borrowerStateGroup_df <- group_by(loan_df, BorrowerState)
borrowersState <- summarise(borrowerStateGroup_df, count = n())
borrowersState <- borrowersState[order(-borrowersState$count),]
states <- unique((head(borrowersState, 11))$BorrowerState)
top10States <- subset(loan_df,  (BorrowerState %in% states))
loansWithoutState <- subset(loan_df,
BorrowerState == '')[c('ListingCreationDate',
'CreationYearList',
'BorrowerState')]
loansWithoutState$ListingCreationDate <-
as.Date(loansWithoutState$ListingCreationDate)
loansWithoutState <-
loansWithoutState[rev(order(loansWithoutState$ListingCreationDate)),]
table(loansWithoutState$CreationYearList)
ggplot(aes(x = BorrowerState), data = subset(top10States, BorrowerState != '')) +
stat_count(fill="#B1C192") +
ggtitle("TOP 10 States") +
theme(text = element_text(size=10)) +
xlab("Borrower State")
ggplot(aes(x = ProsperRating..Alpha.), data = loan_df) +
stat_count(fill = "#B1C192") +
geom_text(stat="count", aes(label = ..count..)) +
ggtitle("Prosper Rating of the borrowers")  +
xlab("Prosper Rating") +
scale_x_discrete(limits= c('', 'AA', 'A', 'B','C', 'D', 'E', 'HR'))
ggplot(aes(x = factor(ProsperScore)), data = loan_df) +
geom_bar() +
ggtitle("Prosper Score of the borrowers") +
xlab("Prosper Score")
summary(loan_df$ProsperScore)
ggplot(aes(x = factor(TotalProsperLoans)), data = loan_df) +
stat_count() +
ggtitle("Total Number of existing Prosper Loans") +
xlab("Existing Prosper Loans") +
theme(text = element_text(size=10)) +
scale_x_discrete(breaks=seq(0, 8, 1))
summary(loan_df$TotalProsperLoans)
summary(loan_df$Investors)
table(loan_df$Recommendations)
summary(loan_df$LenderYield)
ggplot(aes(x=LenderYield), data=loan_df) +
geom_histogram(binwidth=0.005, fill = "#B1C192", color='black') +
scale_x_continuous(breaks=seq(0, 0.5, 0.05)) +
labs(title="Lender Yield on the Loans") +
xlab("Lender Yield")
dim(loan_df)
table(loansAfter_01_07_09$ProsperScore,
dnn="Number of Loans by Prosper Score")
ggplot(aes(x = as.factor(ProsperScore), y = Investors),
data = loansAfter_01_07_09) +
geom_boxplot() +
ggtitle("Prosper Score vs Number of Investors") +
xlab("Prosper Score")
prosperscore_groups <- group_by(loansAfter_01_07_09, ProsperScore)
loansAfter_01_07_09.investors_by_prosperscore = summarise(prosperscore_groups,
investors_mean = mean(Investors),
investors_median = median(Investors),
n = n())
ggplot(aes(x = ProsperScore, y = investors_mean),
data = loansAfter_01_07_09.investors_by_prosperscore) +
geom_line(color="#ff0000") +
scale_x_continuous(breaks = 1:12) +
ggtitle("Prosper Score vs Mean of Number of Investors") +
xlab("Prosper Score") +
ylab("Mean_Investors")
ggplot(aes(x = LoanOriginalAmount, y = Investors), data = loan_df) +
geom_point(alpha = 1/20) +
geom_smooth(method = 'lm', color = 'red') +
ggtitle("Original Loan Amount vs Number of Investors") +
xlab("Original Loan Amount")
ggplot(aes(x = as.factor(TotalProsperLoans), y = Investors),
data = subset(loan_df, !is.na(TotalProsperLoans))) +
geom_boxplot() +
ggtitle("Total Number Prosper Loans that already exist vs Number of Investors") +
xlab("Total Number Prosper Loans that already exist")
summary(loan_df$TotalProsperLoans)
ggplot(aes(x = EstimatedLoss, y = Investors), data = loansAfter_01_07_09) +
geom_point(alpha = 1/20) +
ggtitle("Estimated Loss vs Number of Investors") +
xlab("Estimated Loss")
cor.test(loan_df$EstimatedLoss, loan_df$Investors, method = "pearson")
ggplot(aes(x=as.character(CreationYearList), y=LoanOriginalAmount),
data=loan_df) +
geom_boxplot() +
ggtitle("Creation Year List vs Original Loan Amount") +
xlab("Creation Year List") +
ylab("Original Loan Amount")
by(loan_df$LoanOriginalAmount, loan_df$CreationYearList, summary)
ggplot(aes(x = as.character(Term), y = LoanOriginalAmount),
data = loan_df) +
geom_boxplot() +
ggtitle("Term vs Original Loan Amount") +
xlab("Term") +
ylab("Original Loan Amount")
by(loan_df$LoanOriginalAmount, loan_df$Term, summary)
ggplot(aes(x = IncomeRange, y = LoanOriginalAmount), data=loan_df) +
geom_boxplot() +
ggtitle("Income Range  vs Loan Amount") +
xlab("Income Range") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1)) +
ylab("Original Loan Amount")
ggplot(aes(x = StateOfEmployment, y = LoanOriginalAmount), data=loan_df) +
geom_boxplot() +
ggtitle("Employment Status  vs Original Loan Amount") +
xlab("Employment Information") +
ylab("Original Loan Amount") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1))
summary(loan_df$CurrentCreditLines)
summary(loan_df$MonthlyDebt)
ggplot(aes(x = CurrentCreditLines, y = MonthlyDebt),
data = subset(loan_df, MonthlyDebt != 171000)) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#B1C192')) +
geom_smooth(method = 'lm', color = 'black') +
xlim(0,60) +
ylim(0,10000) +
ggtitle("Monthly Debt vs Current Credit Lines") +
xlab("Monthly Debt") +
ylab("Current Credit Lines")
cor.test(loan_df$CurrentCreditLines, loan_df$MonthlyDebt, method = "pearson")
ggplot(aes(x=BorrowerRate, y = LoanOriginalAmount), data = loansAfter_01_07_09) +
geom_point(alpha = 1/20) +
ggtitle("Borrower Rate vs Loan Amount (by Prosper Ratings)") +
ylab("Loan Amount") +
xlab("Borrower Rate") +
facet_wrap(~ProsperRating..numeric., ncol=3,  scales = "free") +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = as.factor(IncomeRange), y = BorrowerRate),
data = subset(loan_df,
IncomeRange != 'Not employed' &
IncomeRange != 'Not displayed'&
IncomeRange != '$0')) +
geom_boxplot(aes(fill = IsBorrowerHomeowner)) +
ggtitle("Income Range vs Borrower Rate (by Home Owner)") +
guides(fill = guide_legend(title = "Is Borrower Homeowner")) +
xlab("Income Range") +
ylab("Borrower Rate")  +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1))
ggplot(aes(x=BorrowerRate, y = LoanOriginalAmount), data = loansAfter_01_07_09) +
geom_point(alpha = 1/20) +
ggtitle("Borrower Rate vs Loan Amount vs  for different Prosper Scores") +
ylab("Loan Amount") +
xlab("Borrower Rate")  +
facet_wrap(~ProsperScore, ncol=3,  scales = "free")  +
xlim(0, 0.4) +
ylim(0, 35000)
summary(loan_df$ProsperScore)
ggplot(aes(x = CategoryNameList), data = loan_df) +
stat_count(color='black', fill='#B1C192') +
ggtitle("What people borrow money for?") +
xlab("The Purpose of the Loans") +
ylab("Number of loans") +
theme(text = element_text(size=12),
axis.text.x = element_text(angle=90, vjust=1))
ggplot(aes(x = as.factor(ProsperScore), y = Investors),
data = loansAfter_01_07_09) +
geom_boxplot() +
ggtitle("Prosper Score vs Number of Investors") +
xlab("Prosper Score") +
ylab("Number of Investors")
ggplot(aes(x = as.factor(ProsperScore), y = BorrowerRate),
data=loansAfter_01_07_09) +
geom_boxplot(aes(fill = IsBorrowerHomeowner)) +
ggtitle("Prosper Score vs Borrower Rate by Home Owner") +
guides(fill = guide_legend(title = "Is Borrower Homeowner")) +
xlab("Prosper Score") +
ylab("Borrower Rate")
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
scale_colour_gradient(low = "blue") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
scale_colour_gradient(low = "red") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
scale_colour_gradient(low = "red", high = "blue") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
#scale_colour_gradient(low = "red", high = "blue") +
scale_colour_gradient(high = "blue") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
#scale_colour_gradient(low = "red", high = "blue") +
scale_colour_gradient(low = "blue", high = "red") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
#scale_colour_gradient(low = "red", high = "blue") +
scale_colour_gradient(low = "blue", high = "red", borders(fill="black")) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
#scale_colour_gradient(low = "red", high = "blue") +
scale_colour_gradient(low = "blue", high = "red", borders(fill="#000000")) +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
ggplot(aes(x = BorrowerRate, y = LoanOriginalAmount),
data = loansAfter_01_07_09) +
geom_point(aes(color=ProsperRating..numeric.)) +
#scale_colour_gradient(low = "red", high = "blue") +
scale_colour_gradient(low = "blue", high = "red") +
ggtitle("Borrower Rate vs Loan Amount vs Prosper Rating by Income Range") +
xlab("Borrower Rate") +
ylab("Loan Original Amount") +
facet_wrap(~IncomeRange, ncol=3,  scales = "free") +
xlim(0, 0.4) +
ylim(0, 35000)
